- provide(:title, (t('activerecord.models.team.one') + ': ' +  @team.title ))
h1 = yield(:title)

hr

= link_to t('collaborator.add'), new_team_collaborator_path(team_id: @team.id), class: 'btn btn-primary'

hr
- if @team.team_users.approved.present?
  h2 = t('activerecord.models.collaborator', count: @team.collaborators.count)

  table.table.table-hover
    thead
      tr
        th  =t('user.user_name')
        th  =t('user.user_email')
    tbody#teamMembers
      - @team.team_users.approved.each do |user|
        tr id="approvedUserId#{user.id}"
          td = user.his_name_is
          td = user.email

  = link_to t('task.add'), new_team_task_path(team_id: @team.id), class: 'btn btn-primary'
hr
h2 = t('activerecord.models.task', count: @team.tasks.count)
table.table.table-hover
  thead
    tr
      th = t('activerecord.attributes.task.title')
      th = t('user.user_name')
      th = t('task.state')
      th
      th
  tbody#teamTasks
    - @tasks.each do |task|
      tr id="userTask#{task.id}"
        td = task.title
        td = task.user.his_name_is
        - if task.assign_transition.present?
          td id="stateControl#{task.id}"
            = link_to t('task.assign'),
                    task_state_path(task.id, state: :assigned), method: :put,
                    class: 'btn btn-sm btn-primary js-task-assign',
                    data: {remote: true, type: :json, target: "#stateControl#{task.id}"}
        - else
          td
            = t("activerecord.attributes.task.state.#{task.state}")
        td = link_to t('task.edit'), edit_task_path(task)
        td = button_to task, method: :delete, remote: true, class: 'btn btn-danger btn-sm',
                title: t('confirm'),
                data: {confirm: t('confirm'), commit: t('a_yes'), cancel: t('a_no')} do
          = fa_icon 'trash-o'

= link_to t('team.edit'), edit_team_path(@team.id), class: 'btn btn-primary'
